---
resources:
- name: turbo-devel-gcp
  type: git
  source:
    uri: git@github.com:pivotalservices/turbo.git
    branch: devel
    private_key: ((ssh_key_gitlab))
    ignore_paths:
    - 'ci/*'
    - 'bin/*'
    - 'docs/*'
    - 'README.md'
    - '.gitignore'
    - '**/.gitignore'
    - '**/aws/**'
    - '**/azure/**'

- name: turbo-devel-aws
  type: git
  source:
    uri: git@github.com:pivotalservices/turbo.git
    branch: devel
    private_key: ((ssh_key_gitlab))
    ignore_paths:
    - 'ci/*'
    - 'bin/*'
    - 'docs/*'
    - 'README.md'
    - '.gitignore'
    - '**/.gitignore'
    - '**/gcp/**'
    - '**/azure/**'

- name: turbo-devel-azure
  type: git
  source:
    uri: git@github.com:pivotalservices/turbo.git
    branch: devel
    private_key: ((ssh_key_gitlab))
    ignore_paths:
    - 'ci/*'
    - 'bin/*'
    - 'docs/*'
    - 'README.md'
    - '.gitignore'
    - '**/.gitignore'
    - '**/gcp/**'
    - '**/aws/**'

- name: turbo-ci
  type: git
  source:
    uri: git@github.com:pivotalservices/turbo.git
    branch: devel
    private_key: ((ssh_key_gitlab))
    paths: [ci/*]

- name: gcp-environments
  type: pool
  source:
    uri: git@gitlab.com:RomRider/turbo-pools.git
    branch: master
    pool: gcp
    private_key: ((ssh_key_gitlab))

- name: aws-environments
  type: pool
  source:
    uri: git@gitlab.com:RomRider/turbo-pools.git
    branch: master
    pool: aws
    private_key: ((ssh_key_gitlab))

- name: azure-environments
  type: pool
  source:
    uri: git@gitlab.com:RomRider/turbo-pools.git
    branch: master
    pool: azure
    private_key: ((ssh_key_gitlab))

- name: terraform-gcp-devel
  type: terraform
  source:
    backend_type: gcs
    backend_config:
      bucket: tfstate-storage
      prefix: terraform/state/bootstrap-concourse/
    env:
      GOOGLE_CREDENTIALS: ((gcp_key))

- name: terraform-aws-devel
  type: terraform
  source:
    backend_type: gcs
    backend_config:
      bucket: tfstate-storage
      prefix: terraform/state/bootstrap-concourse/
    env:
      GOOGLE_CREDENTIALS: ((gcp_key))

- name: terraform-azure-devel
  type: terraform
  source:
    backend_type: gcs
    backend_config:
      bucket: tfstate-storage
      prefix: terraform/state/bootstrap-concourse/
    env:
      GOOGLE_CREDENTIALS: ((gcp_key))

- name: notify
  type: slack-notification
  source:
    url: ((slack_hook))

resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
    tag: beta-backend

- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

jobs:
## GCP
- name: deploy-gcp-devel
  serial_groups:
  - testing-gcp
  plan:
    - aggregate:
      - get: turbo-devel-gcp
        trigger: true
    - put: terraform-gcp-devel
      params:
        terraform_source: turbo-devel-gcp/terraform/gcp/
        env_name: gcp-devel
        vars:
          <<: *terraform-vars-gcp-devel
      on_failure:
        put: notify
        params:
          text: $BUILD_PIPELINE_NAME - $BUILD_JOB_NAME failed!

- name: testing-gcp-devel
  serial_groups:
  - testing-gcp
  plan:
    - aggregate:
      - get: turbo-ci
      - get: turbo-devel-gcp
        passed: [deploy-gcp-devel]
      - get: terraform-gcp-devel
        passed: [deploy-gcp-devel]
        trigger: true
    - task: testing-gcp-devel
      file: turbo-ci/ci/devel-testing/tasks/run-tests/task.yml
      input_mapping:
        turbo-devel-ci: turbo-ci
        turbo-devel: turbo-devel-gcp
        terraform: terraform-gcp-devel
      on_failure:
        put: notify
        params:
          text: $BUILD_PIPELINE_NAME - $BUILD_JOB_NAME failed!

- name: destroy-gcp-devel
  serial_groups:
  - testing-gcp
  plan:
    - aggregate:
      - get: turbo-devel-gcp
      - get: terraform-gcp-devel
        trigger: false
        passed: [testing-gcp-devel]
    - put: terraform-gcp-devel
      params:
        terraform_source: turbo-devel-gcp/terraform/gcp/
        env_name: gcp-devel
        action: destroy
        vars:
          <<: *terraform-vars-gcp-devel
      get_params:
        action: destroy

## AWS
- name: deploy-aws-devel
  serial_groups:
  - testing-aws
  plan:
    - aggregate:
      - get: turbo-devel-aws
        trigger: true
    - put: terraform-aws-devel
      params:
        terraform_source: turbo-devel-aws/terraform/aws/
        env_name: aws-devel
        vars:
          <<: *terraform-vars-aws-devel
      on_failure:
        put: notify
        params:
          text: $BUILD_PIPELINE_NAME - $BUILD_JOB_NAME failed!

- name: testing-aws-devel
  serial_groups:
  - testing-aws
  plan:
    - aggregate:
      - get: turbo-ci
      - get: turbo-devel-aws
        passed: [deploy-aws-devel]
      - get: terraform-aws-devel
        passed: [deploy-aws-devel]
        trigger: true
    - task: testing-aws
      file: turbo-ci/ci/devel-testing/tasks/run-tests/task.yml
      input_mapping:
        turbo-devel-ci: turbo-ci
        turbo-devel: turbo-devel-aws
        terraform: terraform-aws-devel
      on_failure:
        put: notify
        params:
          text: $BUILD_PIPELINE_NAME - $BUILD_JOB_NAME failed!

- name: destroy-aws-devel
  serial_groups:
  - testing-aws
  plan:
    - aggregate:
      - get: turbo-devel-aws
      - get: terraform-aws-devel
        trigger: false
        passed: [testing-aws-devel]
    - put: terraform-aws-devel
      params:
        terraform_source: turbo-devel-aws/terraform/aws/
        env_name: aws-devel
        action: destroy
        vars:
          <<: *terraform-vars-aws-devel
      get_params:
        action: destroy

#Azure
- name: deploy-azure-devel
  serial_groups:
  - testing-azure
  plan:
    - aggregate:
      - get: turbo-devel-azure
        trigger: true
    - put: terraform-azure-devel
      params:
        terraform_source: turbo-devel-azure/terraform/azure/
        env_name: azure-devel
        vars:
          <<: *terraform-vars-azure-devel
      on_failure:
        put: notify
        params:
          text: $BUILD_PIPELINE_NAME - $BUILD_JOB_NAME failed!

- name: testing-azure-devel
  serial_groups:
  - testing-azure
  plan:
    - aggregate:
      - get: turbo-ci
      - get: turbo-devel-azure
        passed: [deploy-azure-devel]
      - get: terraform-azure-devel
        passed: [deploy-azure-devel]
        trigger: true
    - task: testing-azure-devel
      file: turbo-ci/ci/devel-testing/tasks/run-tests/task.yml
      input_mapping:
        turbo-devel-ci: turbo-ci
        turbo-devel: turbo-devel-azure
        terraform: terraform-azure-devel
      on_failure:
        put: notify
        params:
          text: $BUILD_PIPELINE_NAME - $BUILD_JOB_NAME failed!

- name: destroy-azure-devel
  serial_groups:
  - testing-azure
  plan:
    - aggregate:
      - get: turbo-devel-azure
      - get: terraform-azure-devel
        trigger: false
        passed: [testing-azure-devel]
    - put: terraform-azure-devel
      params:
        terraform_source: turbo-devel-azure/terraform/azure/
        env_name: azure-devel
        action: destroy
        vars:
          <<: *terraform-vars-azure-devel
      get_params:
        action: destroy

- name: unlock-aws-devel
  plan:
    - get: aws-environments
    - put: aws-environments
      params: {release: aws-environments}

- name: unlock-gcp-devel
  plan:
    - get: gcp-environments
    - put: gcp-environments
      params: {release: gcp-environments}

- name: unlock-azure-devel
  plan:
    - get: azure-environments
    - put: azure-environments
      params: {release: azure-environments}


terraform-vars-gcp-devel: &terraform-vars-gcp-devel
  env_name: gcp-devel
  gcp_project_name: 'fe-jwiedemann'
  gcp_region: 'europe-west1'
  gcp_zones: ["europe-west1-b"]
  master_dns_zone_name: 'gcp-wnetworks'
  dns_domain_name: 'gcp-devel.gcp.pcf.wnetworks.org'
  bootstrap_subnet: '10.0.0.0/24'
  source_admin_networks: ["83.202.25.187/32","35.187.160.72/32"]
  concourse_web_vm_count: 1
  credhub_uaa_vm_count: 1
  deploy_metrics: "true"
  gcp_key: '((gcp_key))'

terraform-vars-aws-devel: &terraform-vars-aws-devel
  env_name: aws-devel
  aws_region: "eu-west-2"
  aws_azs: ["eu-west-2a"]
  bootstrap_subnet: "10.0.0.0/22"
  source_admin_networks: ["83.202.25.187/32","35.187.160.72/32"]
  master_dns_domain_name: "aws.pcf.wnetworks.org"
  dns_domain_name: "aws-devel.aws.pcf.wnetworks.org"
  concourse_web_vm_count: 1
  credhub_uaa_vm_count: 1
  deploy_metrics: "true"
  aws_access_key: ((aws_access_key))
  aws_secret_key: ((aws_secret_key))

terraform-vars-azure-devel: &terraform-vars-azure-devel
  env_name: azure-devel
  arm_tenant_id: ((arm_tenant_id))
  arm_subscription_id: ((arm_subscription_id))
  arm_client_id: ((arm_client_id))
  arm_client_secret: ((arm_client_secret))
  arm_location: "West Europe"
  master_dns_domain_name: "azure.pcf.wnetworks.org"
  master_dns_domain_name_rg: "dns-rg"
  dns_domain_name: "azure-dev.azure.pcf.wnetworks.org"
  bootstrap_subnet: "10.0.0.0/24"
  source_admin_networks: ["0.0.0.0/0"]
  concourse_web_vm_count: 1
  credhub_uaa_vm_count: 1
  deploy_metrics: "true"
